---
name: "Publish Docker Image"
description: "Build and publish a Docker Image to DockerHub"
inputs:
  rootDir:
    required: true
    description: "The directory where the notice.md file and the src/main/docker directory are located"
  registry:
      required: false
      default: "ghcr.io"
      description: "The registry to push the image to"
  namespace:
    required: false
    default: "dataspace-rs"
    description: "The Docker image namespace"
  imagename:
    required: true
    description: "the name of the image"
  docker_user:
    required: false
    description: "DockerHub user name. No push is done if omitted"
  docker_token:
    required: false
    description: "DockerHub Token. No push is done if omitted"
  docker_tag:
    required: false
    description: 'additional docker tags'

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4

    #####################
    # Login to DockerHub
    #####################
    - name: DockerHub login
      uses: docker/login-action@v2
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.docker_user }}
        password: ${{ inputs.docker_token }}

    #####################
    # Build JAR file
    #####################
    - name: Setup JDK 17
      uses: actions/setup-java@v4.1.0
      with:
        java-version: "17"
        distribution: "temurin"
        cache: "gradle"
    - name: Build Image
      shell: bash
      run: |-
        ./gradlew -p ${{ inputs.rootDir }} shadowJar

    ###############################
    # Set metadata of docker image
    ###############################
    # Create SemVer or ref tags dependent of trigger event
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: |
          ${{inputs.registry}}/${{ inputs.namespace }}/${{ inputs.imagename }}
        tags: |
          type=semver,pattern={{version}},value=${{ inputs.docker_tag }}
          type=semver,pattern={{major}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{raw}}
          type=match,pattern=\d.\d.\d
          type=raw,value=latest,enable={{is_default_branch}}
          type=sha

    ###############################
    # Build and push the image
    ###############################
    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: ${{ inputs.rootDir }}
        file: ${{ inputs.rootDir }}/build/resources/docker/Dockerfile
        build-args: |
          JAR=build/libs/${{ inputs.imagename }}.jar
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
